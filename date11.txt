#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>     



void tostring(char str[], int num)    
{    
 int i,rem,len=0,n;    
    
 n=num;    
 while(n!=0)    
 {    
  len++;    
  n/=10;    
 }    
 for(i=0;i<len;i++)    
 {    
  rem=num%10;    
  num/=10;    
  str[len-(i+1)]=rem+'0';    
 }    
 str[len]='\0';    
}   

int validateDate(int enterDate,int enterMonth,int enterYear)
{
    int dayDiff=0,monthDiff=0,yearDiff=0,flag=0;
	time_t t=time(NULL);
	struct tm tm=*localtime(&t);
    int year,month,date,hour,minute,seconds;
    year=tm.tm_year+1900;
    month=tm.tm_mon+1;
    date=tm.tm_mday;
    hour=tm.tm_hour;
    minute=tm.tm_min;
    seconds=tm.tm_sec;
    if(enterDate>=date)
    {
        dayDiff=enterDate-date;
    }
    else
    {
        enterDate=enterDate+30;
        enterMonth=enterMonth-1;
        dayDiff=enterDate-date;
    }
    if(enterMonth>=month)
    {
        monthDiff=enterMonth-month;
    }
    else
    {
        enterMonth=enterMonth+12;
        enterYear=enterYear-1;
        monthDiff=enterMonth-month;
    }
    yearDiff=enterYear-year;
    if(dayDiff<0 || monthDiff<0 || yearDiff<0)
    {
        flag=0;
    }
    else
    {
        flag=1;
    }
    return flag;
}

char* dateInString()    
{    
 char ch[2]="/";    
 static char date[11]="";    
 char str[10]="";     
   
   
 time_t t=time(NULL);      
 struct tm tm=*localtime(&t);      
    int year,month,day,hour,minute,seconds;      
    year=tm.tm_year+1900;      
    month=tm.tm_mon+1;      
    day=tm.tm_mday;      
    hour=tm.tm_hour;      
    minute=tm.tm_min;      
    seconds=tm.tm_sec;      
  
  
 tostring(str,day);    
 strcat(date,str);    
 strcat(date,ch);    
 tostring(str,month);    
 strcat(date,str);     
 strcat(date,ch);     
 tostring(str,year);    
 strcat(date,str);      
 return date;    
}    





int bookmonth(int enterMonth)      
{   
	//char str1[5];
	int i,j;
	/*for(i=3,j=0;i<5;j++,i++)
	{
		str1[j]=str[i];
	}*/
	//enterMonth=atoi(str1);
	//printf("\ndkjansn %s",str1);
	printf("\nthis mon %d",enterMonth);
	if(enterMonth>=10)    
		{    
			 return((enterMonth%10)+1);  
		}  
	else  
		{  
			return(enterMonth+3);  
		}
}

int main()
{
	int date,month,aftermonth,afterdate,dateleap,year,i,j,monthleap;
	char str[11],str1[5];
	str1[2]='\0';
	str[4]='\0';
	
labelDate:printf("\nEnter date (dd/mm/yyyy): ");
	scanf("%s",str);
	date=dateval(str);
	if(date>31)
	{
		printf("\nEnter valid Date");
		goto labelDate;
	}

	

	month=monthval(str);
	if(month>12)
	{
		printf("\nEnter valid month");
		goto labelDate;
	}

	aftermonth=bookmonth(month);
	printf("\nAFTR MOMNY  %d",aftermonth);
	monthleap=month-aftermonth;
	if(monthleap<3)
	{
		printf("\nBooking cannot be extended");
	}
	else if(monthleap==3)
		{
			afterdate=dateInString(str);
			if(afterdate<date)
			{
				printf("\nBooking cannot be extended");
			}
			else
			{
				printf("\nBooking successful");
			}
		}
	else
	{
		printf("\nBooking successful");
	}

	year=yearval(str);
	if(year>2018)
	{
		printf("\nBooking date should be within 6 months");
		goto labelDate;
	}

	if( validateDate(date,month,year) )
		printf("\nvalid");
	else
		printf("\ninvalid");	

	return 0;
}
int monthval(char *str)
{
	char str1[5];
	int i,j,month;
	for(i=3,j=0;i<5;j++,i++)
	{
		str1[j]=str[i];
	}
	month=atoi(str1);
	return month;
}
int dateval(char *str)
{
	char str1[5];
	int i,j,date;
	for(i=0;i<2;i++)
	{
		str1[i]=str[i];
	}
	date=atoi(str1);
	return date;
}
int yearval(char *str)
{
	char str1[5];
	int i,j,year;
	for(i=6,j=0;i<10;j++,i++)
	{
		str1[j]=str[i];
	}
	year=atoi(str1);
	return year;
}
