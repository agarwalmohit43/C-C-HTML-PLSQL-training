
cd          : to go to home directory
pwd         : to know present working directory
ls          : to know differet files and folders
cd ..       : to go back
date	    : to know the present date
/mnt	    : to mount 
cal	    : to go to calender
mkdir	    : to create a directory eg:mkdir name_of_directory
cd name     : to go to created directory
cat>file.txt : this command is used to create a file
cat file.txt : to display the file contents
ls -l	     : to display the all files in directory
ls -i        : to display the inode number
nl filename  : to dispaly the lines with number
nl -v10 -i2  : gives the line number with 10 and incremented by 2 for every number
nl -v10 -i2 -w10 : it gives width from line number to command
cat /etc/passwd  : it display the details who are presently logged in
whoami           : to know the who am i
chmod g+w        : change the mode of restriction to the group members
mkdir dir1 dir1/dir2:to create multiple directories in single command
rmdir dir1/dir2 dir1:to remove directories
mkdir .hiddendir:to create hidden files
ls -a:to show hidden directories
comm f1 f2:which gives commanality in two files
touch f1:creates the file
cat f1>f2:copy the contents of f1 to f2
diff f1 f2:gives the difference b/w the files
head emp.txt:show top 10 lines 
head -n 2 emp.txt:show top 2 lines
tail emp.txt:showing bottom lines
tail -n 2 emp.txt:showing bottom 2 lines
tail -5c emp.txt:showing last 5 characters 
-bash-3.2$ cut -d "|" -f2 empl.txt |sort
-bash-3.2$ cut -d "|" -f2 empl.txt |sort|uniq
-bash-3.2$ cut -d "|" -f3 empl.txt |sort -u|wc -l
-bash-3.2$ cut -d "|" -f3 empl.txt |sort|uniq -c
-bash-3.2$ tee newemp<friends.txt
-bash-3.2$ find -name empl.txt
-bash-3.2$ find -perm 777



vi editor


press i to insert press 
esc to go in a command mode
press o to write below line
press O to write above line
q! quit without saving
sed -i 's/|/:/g' empl.txt
sed '$p' empl.txt
sed -n '2,4p' empl.txt


cut -c36-40 dir > size
 cat >f1 &
  856  ps -F
  857  cat >f2 &
  858  cat >f3 &
  859  ps
  860  jobs
  861  fg %2
  862  ps -F
  863  kill 19844
  864  ps -F
  865  kill -9 19844
  866  ps -F


-bash-3.2$ awk -F":"  '{print $1,$3}' empl.txt

//using || conditions

-bash-3.2$ awk -F ":" '$3~"Manager" || $4>80000{
> cnt=cnt+1
> printf "%d %d %s %d\n",cnt,NR,$2,$4}' empl.txt
1 1 John 80000
2 2 James 90000
3 3 Allen 85000
4 4 Williams 88000
5 5 Jermey 89000


//copy in to file
-bash-3.2$ awk -F ":" -f awkfile.awk empl.txt
ManagerManager-bash-3.2$ cat awkfile.awk
$3~"Manager"{printf "%s",$3}

////header
-bash-3.2$ awk 'BEGIN {print "Header"}
> {print}
> END {print "End"}' empl.txt
Header
1001:John:Manager:80000:23-jan-2014
1002:James:g.m:90000:24-jun-2012
1003:Allen:Director:85000:21-dec-2015
1004:Williams:Manager:88000:12-may-2011
1005:Jermey:g.m:89000:23-sep-2011
End

//working of  begin and end
-bash-3.2$ awk -F ":" 'BEGIN {print "mgr details are"}
$3~"Manager" {cnt++; print $2,$3}
END {printf "Total managers are: %d\n",cnt}' empl.txt
mgr details are
John Manager
Williams Manager
Total managers are: 2

//shell scripting


-bash-3.2$ cat hello.sh
echo "enter your name"
read name
echo "Hello $name Welcome to the shell scripting"


/home/testuser73/
-bash-3.2$ cat cmd.sh
echo "Today date is `date`"
echo "`pwd`"
-bash-3.2$


-bash-3.2$ sh cmd.sh
Today date is Fri Jun  3 09:16:56 IST 2016
/home/testuser73/
-bash-3.2$ cat cmd.sh


-bash-3.2$ cat arithmetic
num1=10
num2=20
result=`expr $num1 + $num2`
echo "the result of addition is: $result"
echo "end"

-bash-3.2$ cat patterns
echo "Enter pattern"
read pattern
echo "Enter the file name"
read fname
grep $pattern $fname

-bash-3.2$ sh patterns
Enter pattern
Manager
Enter the file name
empl.txt
1001:John:Manager:80000:23-jan-2014
1004:Williams:Manager:88000:12-may-2011

//command line arguments

-bash-3.2$ vi text
-bash-3.2$ sh text arg1 arg2 arg3 arg4 arg5
Number of arguments are sent: 5
Arguments are: arg1 arg2 arg3 arg4 arg5
-bash-3.2$ cat text
echo "Number of arguments are sent: $#"
echo "Arguments are: $*"


//if statements

-bash-3.2$ vi ifdemo
-bash-3.2$ cat ifdemo
echo "enter num1"
read num1
echo "enter num2"
read num2
if [$num1 -eq $num2]
then
echo "numbers are equal"
else
echo "numbers are not equal"
fi
echo "end"

//casedemo

-bash-3.2$ sh casedemo
1.display file details:
2.display date
3.pwd
4.display calender
enter choice
3
/home/testuser73/
-bash-3.2$ cat casedemo
echo "1.display file details:"
echo "2.display date"
echo "3.pwd"
echo "4.display calender"
echo "enter choice"
read choice
case $choice in
1)cat /etc/passwd;;
2)date;;
3)pwd;;
4)cal;;
esac

//for demo
-bash-3.2$ cat fordemo
for var in 
do
echo "$var"
done

for((i=0;i<5;i++))
do echo "$i"
done
-bash-3.2$

//while demo

-bash-3.2$ cat whiledemo
num=1
while [ $num -le 10 ]
do
echo "$num"
num=`expr $num + 1`
done

